name: Run CI pipe for dbt projects
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  DBT_PROJECT_NAME: jaffle_shop
  DBT_DW_ACCOUNT_URL: ${{ secrets.DBT_TARGET_URL }}
  DBT_DW_USER: ${{ secrets.DBT_USER }}
  DBT_DW_PASSWORD: ${{ secrets.DBT_PASSWORD }}
  DBT_DW_ROLE: ${{ secrets.DBT_ROLE }}
  DBT_DW_DB: ${{ secrets.DBT_DB }}
  DBT_DW_SCHEMA: ${{ secrets.DBT_SCHEMA }}
  DBT_DW_VIRT_WH: ${{ secrets.DBT_VIRT_WH }}
  DBT_NUM_THREADS: 20
  DBT_QUERY_TAG: dbt_ci_pipe
  
jobs:
    compile:
        name: Build and Compile dbt Project
        runs-on: ubuntu-latest
        steps:
          - name: Check out the repo hosting the dbt project
            uses: actions/checkout@v2
          - name: create string
            run: |
              MY_STRING=$(cat << EOF
              ${{ env.DBT_PROJECT_NAME }}:
                target: dev
                outputs:
                  dev:
                    type: snowflake
                    account: ${{ env.DBT_DW_ACCOUNT_URL }} 
                    client_session_keep_alive: true
                    database: ${{ env.DBT_DW_DB }}
                    password: ${{ env.DBT_DW_PASSWORD }}
                    query_tag: ${{ env.DBT_QUERY_TAG }}
                    role: ${{ env.DBT_DW_ROLE }}
                    schema: ${{ env.DBT_DW_SCHEMA }}
                    threads: ${{ env.DBT_NUM_THREADS }}
                    user: ${{ env.DBT_DW_USER }}
                    warehouse: ${{ env.DBT_DW_VIRT_WH }}
              EOF
              )
              MY_STRING="${MY_STRING//'%'/'%25'}"
              MY_STRING="${MY_STRING//$'\n'/'%0A'}"
              MY_STRING="${MY_STRING//$'\r'/'%0D'}"
              echo "::set-output name=content::$MY_STRING"
            id: my_string
          - name: display string
            run: |
              echo "The string is: ${{ steps.my_string.outputs.content }}"
          - name: Get and Use dbt docker image to access dbt project
            uses: addnab/docker-run-action@v3
            with:
                image: fishtownanalytics/dbt:1.0.0
                options: -v ${{ github.workspace }}:/work -e ABC=123
                shell: bash
                run: |
                  mkdir ~/.dbt
                  touch /root/.dbt/profiles.yml
                  echo -e "${{ steps.my_string.outputs.content }}" >> /root/.dbt/profiles.yml
                  cd /work/project_base_template/
                  ls -ltr /work
                  dbt debug
                  dbt compile
                  dbt clean
